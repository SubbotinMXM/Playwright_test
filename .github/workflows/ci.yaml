name: CI Pipeline

on:
  workflow_dispatch:
    inputs:
      test_tag:
        description: 'Test tag to run'
        required: false
        default: 'regress'

env:
  TEST_TAG: ${{ github.event.inputs.test_tag || 'regress' }}

jobs:
  build:
    name: Build Project (without tests)
    runs-on: ubuntu-latest
    container:
      image: gradle:8.3-jdk20

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Build without tests
        run: gradle clean build -x test --no-daemon --console=plain

  test:
    name: Run Tests and Collect Allure Report
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true
    container:
      image: mcr.microsoft.com/playwright:focal

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Gradle 8.3 via SDKMAN
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install gradle 8.3
          gradle --version

      - name: Run tests with tag
        env:
          TEST_TAG: ${{ env.TEST_TAG }}
        run: gradle clean -PtestTag=${{ env.TEST_TAG }} --no-daemon --console=plain

      - name: Save Allure results as artifact
        uses: actions/upload-artifact@4a05f94
        with:
          name: allure-results
          path: build/allure-results

  report:
    name: Publish Allure Report to GitHub Pages
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Download Allure results artifact
        uses: actions/download-artifact@v3
        with:
          name: allure-results
          path: allure-results

      - name: Install Allure Commandline
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget openjdk-21-jdk
          wget -qO- https://github.com/allure-framework/allure2/releases/latest/download/allure-2.23.2.zip > allure.zip
          unzip allure.zip -d ./allure
          chmod +x ./allure/bin/allure

      - name: Generate Allure Report
        run: ./allure/bin/allure generate allure-results -o allure-report --clean

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          user_name: github-actions
          user_email: github-actions@github.com
